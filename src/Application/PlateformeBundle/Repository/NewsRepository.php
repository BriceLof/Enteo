<?php

namespace Application\PlateformeBundle\Repository;

use Application\PlateformeBundle\Entity\Statut;
/**
 * NewsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NewsRepository extends \Doctrine\ORM\EntityRepository
{
    public function getNewsByStatut()
    {
        //RV1 à faire
        $queryBuilder = $this->createQueryBuilder('n')
                ->where('n.statut = :statut')
                ->setParameter('statut', 3)
                ->orderBy("n.id", "DESC");
        
        $query = $queryBuilder->getQuery();
        $results = $query->getResult();
        return $results;
    }

    public function getLast($beneficiaire)
    {
        $queryBuilder = $this->createQueryBuilder('n')
            ->where('n.beneficiaire = :beneficiaire')
            ->setParameter('beneficiaire', $beneficiaire)
            ->andWhere('n.detailStatut != :statut')
            ->setParameter('statut', "NULL")
            ->orderBy('n.id', 'DESC')
            ->setMaxResults(1)
        ;

        $query = $queryBuilder->getQuery();
        $results = $query->getResult();
        return $results;
    }

    public function getListConsultantGotRv1OrRv2($beneficiaire){
        // en sortie dans $result, on a un tableau avec des clés par défaut,
        // et pour définir une autre clé, par exemple l'id d'une entité, il suffit d'ajouter le 2nd argument à createQueryBuilder()
        $queryBuilder = $this->createQueryBuilder('n', 'n.consultant')
            ->where('n.beneficiaire = :beneficiaire')
            ->setParameter('beneficiaire', $beneficiaire)
            ->andWhere('n.consultant IS NOT NULL ')
            ->andWhere('n.statut IN (3,4,5,6)')
            ->groupBy('n.consultant')
            ->orderBy('n.id', 'DESC')
        ;

        $query = $queryBuilder->getQuery();
        $results = $query->getResult();
        return $results;
    }
}
